<!--
 - tracker.launch
 -
 - Launch file for pi_vision face tracking, with inputs from two
 - cameras: a (stationary) body camera, and an eye camera (which
 - moves with the eyes, and thus has a constantly changing
 - field-of-view).
 -
-->
<launch>
    <arg name="pi_vision" default="true"/>
    <arg name="testing" default="False"/>
    <arg name="viz" default="False"/>
    <arg name="offline" default="False"/>
    <group unless="$(arg testing)">
    <node pkg="usb_cam" type="usb_cam_node" name="camera">
      <param name="video_device" value="/dev/video0"/>
      <param name="pixel_format" value="yuyv"/>
      <param name="width" value="640"/>
      <param name="height" value="480"/>
      <param name="camera_info_url" value="package://robots_config/robot/camera.yaml"/>
      <param name="camera_name" value="camera"/>
      <param name="camera_frame_id" value="camera"/>
      <param name="frame_id" value="camera"/>
    </node>
    <node ns="camera" name="cam_calib" pkg="image_proc" type="image_proc"/>
    </group>

    <group if="$(arg pi_vision)">
    <arg name="auto_face_tracking" default="True" />
    <node pkg="pi_face_tracker" name="body_face_tracker"
          type="face_tracker.py" output="screen">

        <!--remap the topics if using multiple cameras -->
        <remap from="input_rgb_image" to="camera/image_raw" />
        <remap from="output_image" to="camera/pi_face_tracker/image" />

        <param name="auto_face_tracking" value="$(arg auto_face_tracking)" />
        <param name="camera_name" value="camera" />

        <rosparam>
          use_haar_only: False
          auto_min_features: True
          min_features: 50
          abs_min_features: 6
          good_feature_distance: 5
          add_feature_distance: 10
          max_face_size: 0.28
          expand_roi: 1.02
          flip_image: False
          feature_type: 0
          camera_fov_x: 1.42
        </rosparam>

        <param name="cascade_frontal_alt"
               value="$(find pi_face_tracker)/params/haarcascade_frontalface_alt.xml" />
    </node>
    </group>

 <group unless="$(arg pi_vision)">
    <include file="$(find cmt_tracker)/launch/cmt_launcher.launch" ns="camera">
    <arg name="testing" value="$(arg testing)"/>
    <arg name="offline" value="$(arg offline)"/>
    </include>
 </group>
<group if="$(arg viz)">
    <include file="$(find robots_config)/launch/perception.launch" />
</group>
</launch>
